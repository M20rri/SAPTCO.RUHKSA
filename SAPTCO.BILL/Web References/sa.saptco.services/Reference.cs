//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SAPTCO.BILL.sa.saptco.services {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NotificationWSSoap", Namespace="http://www.saptco.com.sa/Notification")]
    public partial class NotificationWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CancelScheduledOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSScheduledOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailWithAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailScheduledOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailForTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailForKAUSTTicketOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NotificationWS() {
            this.Url = global::SAPTCO.BILL.Properties.Settings.Default.SAPTCO_BILL_sa_saptco_services_NotificationWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CancelScheduledCompletedEventHandler CancelScheduledCompleted;
        
        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;
        
        /// <remarks/>
        public event SendSMSScheduledCompletedEventHandler SendSMSScheduledCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event SendEmailNotificationCompletedEventHandler SendEmailNotificationCompleted;
        
        /// <remarks/>
        public event SendEmailWithAttachmentsCompletedEventHandler SendEmailWithAttachmentsCompleted;
        
        /// <remarks/>
        public event SendEmailScheduledCompletedEventHandler SendEmailScheduledCompleted;
        
        /// <remarks/>
        public event SendEmailForTicketCompletedEventHandler SendEmailForTicketCompleted;
        
        /// <remarks/>
        public event SendEmailForKAUSTTicketCompletedEventHandler SendEmailForKAUSTTicketCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.saptco.com.sa/Notification/CancelScheduled", RequestNamespace="http://www.saptco.com.sa/Notification", ResponseNamespace="http://www.saptco.com.sa/Notification", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CancelScheduled(int senderID, long appRefID) {
            object[] results = this.Invoke("CancelScheduled", new object[] {
                        senderID,
                        appRefID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelScheduledAsync(int senderID, long appRefID) {
            this.CancelScheduledAsync(senderID, appRefID, null);
        }
        
        /// <remarks/>
        public void CancelScheduledAsync(int senderID, long appRefID, object userState) {
            if ((this.CancelScheduledOperationCompleted == null)) {
                this.CancelScheduledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelScheduledOperationCompleted);
            }
            this.InvokeAsync("CancelScheduled", new object[] {
                        senderID,
                        appRefID}, this.CancelScheduledOperationCompleted, userState);
        }
        
        private void OnCancelScheduledOperationCompleted(object arg) {
            if ((this.CancelScheduledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelScheduledCompleted(this, new CancelScheduledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.saptco.com.sa/Notification/SendSMS", RequestNamespace="http://www.saptco.com.sa/Notification", ResponseNamespace="http://www.saptco.com.sa/Notification", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendSMS(string mobileNumber, string text, int senderID) {
            object[] results = this.Invoke("SendSMS", new object[] {
                        mobileNumber,
                        text,
                        senderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSAsync(string mobileNumber, string text, int senderID) {
            this.SendSMSAsync(mobileNumber, text, senderID, null);
        }
        
        /// <remarks/>
        public void SendSMSAsync(string mobileNumber, string text, int senderID, object userState) {
            if ((this.SendSMSOperationCompleted == null)) {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        mobileNumber,
                        text,
                        senderID}, this.SendSMSOperationCompleted, userState);
        }
        
        private void OnSendSMSOperationCompleted(object arg) {
            if ((this.SendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.saptco.com.sa/Notification/SendSMSScheduled", RequestNamespace="http://www.saptco.com.sa/Notification", ResponseNamespace="http://www.saptco.com.sa/Notification", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendSMSScheduled(string mobileNumber, string text, int senderID, System.DateTime scheduleDate, long appRefID) {
            object[] results = this.Invoke("SendSMSScheduled", new object[] {
                        mobileNumber,
                        text,
                        senderID,
                        scheduleDate,
                        appRefID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSScheduledAsync(string mobileNumber, string text, int senderID, System.DateTime scheduleDate, long appRefID) {
            this.SendSMSScheduledAsync(mobileNumber, text, senderID, scheduleDate, appRefID, null);
        }
        
        /// <remarks/>
        public void SendSMSScheduledAsync(string mobileNumber, string text, int senderID, System.DateTime scheduleDate, long appRefID, object userState) {
            if ((this.SendSMSScheduledOperationCompleted == null)) {
                this.SendSMSScheduledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSScheduledOperationCompleted);
            }
            this.InvokeAsync("SendSMSScheduled", new object[] {
                        mobileNumber,
                        text,
                        senderID,
                        scheduleDate,
                        appRefID}, this.SendSMSScheduledOperationCompleted, userState);
        }
        
        private void OnSendSMSScheduledOperationCompleted(object arg) {
            if ((this.SendSMSScheduledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSScheduledCompleted(this, new SendSMSScheduledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.saptco.com.sa/Notification/SendEmail", RequestNamespace="http://www.saptco.com.sa/Notification", ResponseNamespace="http://www.saptco.com.sa/Notification", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendEmail(string To, string subject, string body, int senderID) {
            object[] results = this.Invoke("SendEmail", new object[] {
                        To,
                        subject,
                        body,
                        senderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailAsync(string To, string subject, string body, int senderID) {
            this.SendEmailAsync(To, subject, body, senderID, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string To, string subject, string body, int senderID, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        To,
                        subject,
                        body,
                        senderID}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new SendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.saptco.com.sa/Notification/SendEmailNotification", RequestNamespace="http://www.saptco.com.sa/Notification", ResponseNamespace="http://www.saptco.com.sa/Notification", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEmailNotification(EmailNotification Email) {
            object[] results = this.Invoke("SendEmailNotification", new object[] {
                        Email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailNotificationAsync(EmailNotification Email) {
            this.SendEmailNotificationAsync(Email, null);
        }
        
        /// <remarks/>
        public void SendEmailNotificationAsync(EmailNotification Email, object userState) {
            if ((this.SendEmailNotificationOperationCompleted == null)) {
                this.SendEmailNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailNotificationOperationCompleted);
            }
            this.InvokeAsync("SendEmailNotification", new object[] {
                        Email}, this.SendEmailNotificationOperationCompleted, userState);
        }
        
        private void OnSendEmailNotificationOperationCompleted(object arg) {
            if ((this.SendEmailNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailNotificationCompleted(this, new SendEmailNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.saptco.com.sa/Notification/SendEmailWithAttachments", RequestNamespace="http://www.saptco.com.sa/Notification", ResponseNamespace="http://www.saptco.com.sa/Notification", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendEmailWithAttachments(string To, string subject, string body, int senderID, Attachments[] Attachments) {
            object[] results = this.Invoke("SendEmailWithAttachments", new object[] {
                        To,
                        subject,
                        body,
                        senderID,
                        Attachments});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailWithAttachmentsAsync(string To, string subject, string body, int senderID, Attachments[] Attachments) {
            this.SendEmailWithAttachmentsAsync(To, subject, body, senderID, Attachments, null);
        }
        
        /// <remarks/>
        public void SendEmailWithAttachmentsAsync(string To, string subject, string body, int senderID, Attachments[] Attachments, object userState) {
            if ((this.SendEmailWithAttachmentsOperationCompleted == null)) {
                this.SendEmailWithAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailWithAttachmentsOperationCompleted);
            }
            this.InvokeAsync("SendEmailWithAttachments", new object[] {
                        To,
                        subject,
                        body,
                        senderID,
                        Attachments}, this.SendEmailWithAttachmentsOperationCompleted, userState);
        }
        
        private void OnSendEmailWithAttachmentsOperationCompleted(object arg) {
            if ((this.SendEmailWithAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailWithAttachmentsCompleted(this, new SendEmailWithAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.saptco.com.sa/Notification/SendEmailScheduled", RequestNamespace="http://www.saptco.com.sa/Notification", ResponseNamespace="http://www.saptco.com.sa/Notification", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendEmailScheduled(string To, string subject, string body, int senderID, System.DateTime ScheduledDate, long appRefID) {
            object[] results = this.Invoke("SendEmailScheduled", new object[] {
                        To,
                        subject,
                        body,
                        senderID,
                        ScheduledDate,
                        appRefID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailScheduledAsync(string To, string subject, string body, int senderID, System.DateTime ScheduledDate, long appRefID) {
            this.SendEmailScheduledAsync(To, subject, body, senderID, ScheduledDate, appRefID, null);
        }
        
        /// <remarks/>
        public void SendEmailScheduledAsync(string To, string subject, string body, int senderID, System.DateTime ScheduledDate, long appRefID, object userState) {
            if ((this.SendEmailScheduledOperationCompleted == null)) {
                this.SendEmailScheduledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailScheduledOperationCompleted);
            }
            this.InvokeAsync("SendEmailScheduled", new object[] {
                        To,
                        subject,
                        body,
                        senderID,
                        ScheduledDate,
                        appRefID}, this.SendEmailScheduledOperationCompleted, userState);
        }
        
        private void OnSendEmailScheduledOperationCompleted(object arg) {
            if ((this.SendEmailScheduledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailScheduledCompleted(this, new SendEmailScheduledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.saptco.com.sa/Notification/SendEmailForTicket", RequestNamespace="http://www.saptco.com.sa/Notification", ResponseNamespace="http://www.saptco.com.sa/Notification", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEmailForTicket(EmailRq EmailRq) {
            object[] results = this.Invoke("SendEmailForTicket", new object[] {
                        EmailRq});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailForTicketAsync(EmailRq EmailRq) {
            this.SendEmailForTicketAsync(EmailRq, null);
        }
        
        /// <remarks/>
        public void SendEmailForTicketAsync(EmailRq EmailRq, object userState) {
            if ((this.SendEmailForTicketOperationCompleted == null)) {
                this.SendEmailForTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailForTicketOperationCompleted);
            }
            this.InvokeAsync("SendEmailForTicket", new object[] {
                        EmailRq}, this.SendEmailForTicketOperationCompleted, userState);
        }
        
        private void OnSendEmailForTicketOperationCompleted(object arg) {
            if ((this.SendEmailForTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailForTicketCompleted(this, new SendEmailForTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.saptco.com.sa/Notification/SendEmailForKAUSTTicket", RequestNamespace="http://www.saptco.com.sa/Notification", ResponseNamespace="http://www.saptco.com.sa/Notification", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEmailForKAUSTTicket(KAUSTEmailRq KAUSTEmailRq) {
            object[] results = this.Invoke("SendEmailForKAUSTTicket", new object[] {
                        KAUSTEmailRq});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailForKAUSTTicketAsync(KAUSTEmailRq KAUSTEmailRq) {
            this.SendEmailForKAUSTTicketAsync(KAUSTEmailRq, null);
        }
        
        /// <remarks/>
        public void SendEmailForKAUSTTicketAsync(KAUSTEmailRq KAUSTEmailRq, object userState) {
            if ((this.SendEmailForKAUSTTicketOperationCompleted == null)) {
                this.SendEmailForKAUSTTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailForKAUSTTicketOperationCompleted);
            }
            this.InvokeAsync("SendEmailForKAUSTTicket", new object[] {
                        KAUSTEmailRq}, this.SendEmailForKAUSTTicketOperationCompleted, userState);
        }
        
        private void OnSendEmailForKAUSTTicketOperationCompleted(object arg) {
            if ((this.SendEmailForKAUSTTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailForKAUSTTicketCompleted(this, new SendEmailForKAUSTTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.saptco.com.sa/Notification")]
    public partial class EmailNotification {
        
        private string toField;
        
        private string subjectField;
        
        private string titleField;
        
        private System.Nullable<short> templateIDField;
        
        private string bodyField;
        
        private int senderIDField;
        
        private System.Nullable<System.DateTime> scheduleDateField;
        
        private System.Nullable<long> appRefIDField;
        
        private Attachments[] attachmentField;
        
        /// <remarks/>
        public string To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<short> TemplateID {
            get {
                return this.templateIDField;
            }
            set {
                this.templateIDField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public int SenderID {
            get {
                return this.senderIDField;
            }
            set {
                this.senderIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ScheduleDate {
            get {
                return this.scheduleDateField;
            }
            set {
                this.scheduleDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> AppRefID {
            get {
                return this.appRefIDField;
            }
            set {
                this.appRefIDField = value;
            }
        }
        
        /// <remarks/>
        public Attachments[] Attachment {
            get {
                return this.attachmentField;
            }
            set {
                this.attachmentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.saptco.com.sa/Notification")]
    public partial class Attachments {
        
        private string nameField;
        
        private byte[] fileBytesField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileBytes {
            get {
                return this.fileBytesField;
            }
            set {
                this.fileBytesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.saptco.com.sa/Notification")]
    public partial class KAUSTEmailRq {
        
        private string channelField;
        
        private string pNRField;
        
        private string langField;
        
        private string templateCodeField;
        
        private string amountField;
        
        private string expirationTimeField;
        
        private string reservationXMlDataField;
        
        private string passengersXMlDataField;
        
        private string toField;
        
        /// <remarks/>
        public string Channel {
            get {
                return this.channelField;
            }
            set {
                this.channelField = value;
            }
        }
        
        /// <remarks/>
        public string PNR {
            get {
                return this.pNRField;
            }
            set {
                this.pNRField = value;
            }
        }
        
        /// <remarks/>
        public string Lang {
            get {
                return this.langField;
            }
            set {
                this.langField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateCode {
            get {
                return this.templateCodeField;
            }
            set {
                this.templateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string ExpirationTime {
            get {
                return this.expirationTimeField;
            }
            set {
                this.expirationTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ReservationXMlData {
            get {
                return this.reservationXMlDataField;
            }
            set {
                this.reservationXMlDataField = value;
            }
        }
        
        /// <remarks/>
        public string PassengersXMlData {
            get {
                return this.passengersXMlDataField;
            }
            set {
                this.passengersXMlDataField = value;
            }
        }
        
        /// <remarks/>
        public string TO {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.saptco.com.sa/Notification")]
    public partial class EmailRq {
        
        private string channelField;
        
        private string pNRField;
        
        private string langField;
        
        private string templateCodeField;
        
        private string tripTypeGroupIdField;
        
        private string amountField;
        
        private string expirationTimeField;
        
        private string reservationXMlDataField;
        
        private string passengersXMlDataField;
        
        private string toField;
        
        private string scheduledDateTimeField;
        
        private string appRefIdField;
        
        /// <remarks/>
        public string Channel {
            get {
                return this.channelField;
            }
            set {
                this.channelField = value;
            }
        }
        
        /// <remarks/>
        public string PNR {
            get {
                return this.pNRField;
            }
            set {
                this.pNRField = value;
            }
        }
        
        /// <remarks/>
        public string Lang {
            get {
                return this.langField;
            }
            set {
                this.langField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateCode {
            get {
                return this.templateCodeField;
            }
            set {
                this.templateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TripTypeGroupId {
            get {
                return this.tripTypeGroupIdField;
            }
            set {
                this.tripTypeGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public string Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string ExpirationTime {
            get {
                return this.expirationTimeField;
            }
            set {
                this.expirationTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ReservationXMlData {
            get {
                return this.reservationXMlDataField;
            }
            set {
                this.reservationXMlDataField = value;
            }
        }
        
        /// <remarks/>
        public string PassengersXMlData {
            get {
                return this.passengersXMlDataField;
            }
            set {
                this.passengersXMlDataField = value;
            }
        }
        
        /// <remarks/>
        public string TO {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        public string ScheduledDateTime {
            get {
                return this.scheduledDateTimeField;
            }
            set {
                this.scheduledDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string AppRefId {
            get {
                return this.appRefIdField;
            }
            set {
                this.appRefIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelScheduledCompletedEventHandler(object sender, CancelScheduledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelScheduledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelScheduledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendSMSCompletedEventHandler(object sender, SendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendSMSScheduledCompletedEventHandler(object sender, SendSMSScheduledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSScheduledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSScheduledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendEmailCompletedEventHandler(object sender, SendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendEmailNotificationCompletedEventHandler(object sender, SendEmailNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendEmailWithAttachmentsCompletedEventHandler(object sender, SendEmailWithAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailWithAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailWithAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendEmailScheduledCompletedEventHandler(object sender, SendEmailScheduledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailScheduledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailScheduledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendEmailForTicketCompletedEventHandler(object sender, SendEmailForTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailForTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailForTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendEmailForKAUSTTicketCompletedEventHandler(object sender, SendEmailForKAUSTTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailForKAUSTTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailForKAUSTTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591